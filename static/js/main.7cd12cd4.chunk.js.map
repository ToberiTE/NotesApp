{"version":3,"sources":["components/Form.js","components/Note.js","components/NotesList.js","App.js","index.js"],"names":["Form","inputText","setInputText","notes","setNotes","placeholder","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","Note","note","map","selectedNote","filter","item","NotesList","filterUncompleted","filterCompleted","App","useState","setFilterUncompleted","setFilterCompleted","useEffect","localStorage","getItem","setItem","JSON","stringify","notesLocal","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cd12cd4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ inputText, setInputText, notes, setNotes }) => {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitNotesHandler = (e) => {\r\n    e.preventDefault();\r\n    setNotes([\r\n      ...notes,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 },\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        placeholder={\"Add note...\"}\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        className=\"notes-input\"\r\n      />\r\n      <button\r\n        onClick={submitNotesHandler}\r\n        className=\"notes-button\"\r\n        type=\"submit\"\r\n      >\r\n        <i className=\"fas fa-plus\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Note = ({ note, notes, setNotes, text }) => {\r\n  const deleteNoteHandler = () => {\r\n    setNotes(notes.filter((item) => item.id !== note.id));\r\n  };\r\n  const completeNoteHandler = () => {\r\n    setNotes(\r\n      notes.map((selectedNote) => {\r\n        if (selectedNote.id === note.id) {\r\n          return {\r\n            ...selectedNote,\r\n            completed: !selectedNote.completed,\r\n          };\r\n        }\r\n        return selectedNote;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={`note fade-in ${note.completed ? \"completed-note\" : \"\"}`}>\r\n      <li className=\"note-item\">{text}</li>\r\n      <button\r\n        onClick={completeNoteHandler}\r\n        className={`completed-btn ${\r\n          note.completed ? \"completed-btn-hidden\" : \"\"\r\n        }`}\r\n      >\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteNoteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nconst NotesList = ({ notes, setNotes, filterUncompleted, filterCompleted }) => {\r\n  return (\r\n    <div className=\"notes-container\">\r\n      <ul className=\"notes-list\">\r\n        <h2>Uncompleted</h2>\r\n        {filterUncompleted.map((note) => (\r\n          <Note\r\n            setNotes={setNotes}\r\n            notes={notes}\r\n            note={note}\r\n            key={note.id}\r\n            text={note.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <ul className=\"notes-list\">\r\n        <h2>Completed</h2>\r\n        {filterCompleted.map((note) => (\r\n          <Note\r\n            setNotes={setNotes}\r\n            notes={notes}\r\n            note={note}\r\n            key={note.id}\r\n            text={note.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport NotesList from \"./components/NotesList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [notes, setNotes] = useState([]);\n  const [filterUncompleted, setFilterUncompleted] = useState([]);\n  const [filterCompleted, setFilterCompleted] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"notes\") === null) {\n      localStorage.setItem(\"notes\", JSON.stringify([]));\n    } else {\n      let notesLocal = JSON.parse(localStorage.getItem(\"notes\"));\n      setNotes(notesLocal);\n    }\n  }, []);\n\n  useEffect(() => {\n    setFilterUncompleted(notes.filter((notes) => notes.completed === false));\n    setFilterCompleted(notes.filter((notes) => notes.completed === true));\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>My Notes</h1>\n      </header>\n      <Form\n        notes={notes}\n        setNotes={setNotes}\n        inputText={inputText}\n        setInputText={setInputText}\n      />\n      <NotesList\n        setNotes={setNotes}\n        notes={notes}\n        filterUncompleted={filterUncompleted}\n        filterCompleted={filterCompleted}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}